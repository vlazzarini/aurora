.TH "Aurora::Env< S >" 3 "Sat Dec 4 2021" "Version 0.1" "Aurora" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Aurora::Env< S >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Env\&.h>\fP
.PP
Inherits \fBAurora::SndBase< S >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEnv\fP (std::function< S(double, S, S)> f, S rt, S \fBfs\fP=\fBdef_sr\fP, std::size_t \fBvsize\fP=\fBdef_vsize\fP)"
.br
.ti -1c
.RI "void \fBrelease\fP (S rt)"
.br
.ti -1c
.RI "const std::vector< S > & \fBoperator()\fP (bool gate)"
.br
.ti -1c
.RI "const std::vector< S > & \fBoperator()\fP (S offs, S scal, bool gate)"
.br
.ti -1c
.RI "const std::vector< S > & \fBoperator()\fP (const std::vector< S > &a, bool gate)"
.br
.ti -1c
.RI "S \fBfs\fP () const"
.br
.ti -1c
.RI "void \fBreset\fP (S \fBfs\fP)"
.br
.ti -1c
.RI "void \fBfunc\fP (const std::function< S(double, S, S)> f)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<typename S>
.br
class Aurora::Env< S >"
\fBEnv\fP class 
.br
Generic envelope 
.br
S: sample type 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename S > \fBAurora::Env\fP< S >::\fBEnv\fP (std::function< S(double, S, S)> f, S rt, S fs = \fC\fBdef_sr\fP\fP, std::size_t vsize = \fC\fBdef_vsize\fP\fP)\fC [inline]\fP"
Constructor 
.br
f: envelope function 
.br
rt: release time 
.br
fs: sampling rate 
.br
vsize: signal vector size 
.SH "Member Function Documentation"
.PP 
.SS "template<typename S > S \fBAurora::Env\fP< S >::fs () const\fC [inline]\fP"
Sampling rate query 
.br
returns sampling rate 
.SS "template<typename S > void \fBAurora::Env\fP< S >::func (const std::function< S(double, S, S)> f)\fC [inline]\fP"
set the envelope function 
.br
f: envelope function to be used 
.SS "template<typename S > const std::vector<S>& \fBAurora::Env\fP< S >::operator() (bool gate)\fC [inline]\fP"
Envelope 
.br
gate: envelope gate 
.SS "template<typename S > const std::vector<S>& \fBAurora::Env\fP< S >::operator() (S offs, S scal, bool gate)\fC [inline]\fP"
Envelope 
.br
offs: sig offset scal: sig scale gate: envelope gate 
.SS "template<typename S > const std::vector<S>& \fBAurora::Env\fP< S >::operator() (const std::vector< S > & a, bool gate)\fC [inline]\fP"
Envelope 
.br
a: input signal gate: envelope gate 
.SS "template<typename S > void \fBAurora::Env\fP< S >::release (S rt)\fC [inline]\fP"
Release time setter rt: release time 
.SS "template<typename S > void \fBAurora::Env\fP< S >::reset (S fs)\fC [inline]\fP"
reset the envelope 
.br
fs: sampling rate 

.SH "Author"
.PP 
Generated automatically by Doxygen for Aurora from the source code\&.
